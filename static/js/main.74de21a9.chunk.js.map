{"version":3,"sources":["Components/MainContent/Dialogs/Dialogs.module.css","Components/MainContent/Profile/Profile.module.css","Components/Header/Header.module.css","Components/MainContent/Profile/Posts.module.css","Components/MainContent/Users/User.module.css","reportWebVitals.ts","Components/Header/Header.tsx","Components/Nav/Nav.tsx","Components/MainContent/Profile/Posts.tsx","redux/profileReduser.ts","Components/MainContent/Profile/NewPostContainer.tsx","Components/MainContent/Profile/NewPost.tsx","StoreContext.ts","Components/MainContent/Profile/MyPost.tsx","Components/MainContent/Profile/Profile.tsx","Components/MainContent/News/News.tsx","Components/MainContent/Music/Music.tsx","Components/MainContent/Settings/Settings.tsx","redux/messageReduser.ts","Components/MainContent/Dialogs/DialogsItems.tsx","Components/MainContent/Dialogs/Messages.tsx","Components/MainContent/Dialogs/DialogContainer.tsx","Components/MainContent/Dialogs/Dialogs.tsx","redux/usersReduser.ts","assets/images/blank-profile-picture-973460_960_720.webp","Components/MainContent/Users/Users.tsx","Components/MainContent/Users/UserContainer.tsx","App.tsx","redux/StoreRedux.ts","index.tsx","Components/Nav/Nav.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","src","alt","Nav","to","activeClassName","activeLink","Posts","props","avaImg","post","like","initialState","posts","id","newPostText","NewPostContainer","connect","state","postData","dispatch","addPost","type","ubdatePost","newText","updatePostAC","onChange","e","currentTarget","value","onClick","StoreContext","React","createContext","MyPost","Consumer","store","postElements","getState","map","p","Profile","mainProfile","mainImg","News","Music","Settings","dialogsData","name","messageData","message","newMessage","DialogsItems","dialog","Messages","messages","DialogContainer","addMessage","messageChange","addMessageAC","dialogElements","d","messageElement","m","containerDialogs","placeholder","users","Users","axios","get","response","setUsers","data","items","this","usersPage","u","photos","small","userPhoto","userImg","followed","unfollow","follow","status","Component","UsersPage","userID","followAC","unfollowAC","setUsersAC","App","path","render","UserContainer","rootRedusers","combineReducers","action","postMessage","stateCopy","newMessageText","createStore","window","renderTree","ReactDOM","StrictMode","Provider","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.74de21a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerDialogs\":\"Dialogs_containerDialogs__29Xah\",\"dialog\":\"Dialogs_dialog__3pvjr\",\"messages\":\"Dialogs_messages__1um_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainImg\":\"Profile_mainImg__2CZT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1s8MH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaImg\":\"Posts_avaImg__19nYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImg\":\"User_userImg__3w7RG\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\n\r\nexport const Header=()=>{\r\n    return(\r\n        <div className={s.header}>\r\n            <img src={'https://images.pexels.com/photos/1162361/pexels-photo-1162361.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'} alt='logo'/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Nav.module.css'\r\n\r\n\r\nexport const Nav=()=>{\r\n    return(\r\n        <div className={s.Nav}>\r\n            <div><NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink></div>\r\n            <div><NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink></div>\r\n            <div><NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink></div>\r\n            <div><NavLink to='/news' activeClassName={s.activeLink}>News</NavLink></div>\r\n            <div><NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink></div>\r\n            <div><NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Posts.module.css'\r\ntype PropsType={\r\n    post:string\r\n    like:number\r\n}\r\n\r\nexport const Posts = (props:PropsType) => {\r\n    return (<div>\r\n            <div className={s.avaImg}>\r\n            <img src={'https://images.pexels.com/photos/33537/cat-animal-cat-portrait-mackerel.jpg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'} alt='Ava'/>\r\n            </div>\r\n            <div>{props.post} like {props.like}</div>\r\n        </div>\r\n    )\r\n}","import {PostDataType} from '../App';\r\n\r\n\r\ntype  ActionType=ReturnType<typeof updatePostAC >|\r\n    ReturnType<typeof addPostAC >\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, post: 'Hi!', like: 3},\r\n        {id: 2, post: 'Yo!', like: 4},\r\n        {id: 3, post: 'Like!', like: 1}\r\n    ],\r\n    newPostText: ''\r\n}\r\nexport const profileReduser = (state: PostDataType = initialState, action: ActionType): PostDataType => {\r\n    switch (action.type) {\r\n        case 'ADD_POST':{\r\n            let postMessage = {\r\n            id: 5,\r\n            post: state.newPostText,\r\n            like: 3\r\n        };\r\n            let stateCopy= {...state,posts : [...state.posts,postMessage],newPostText:''};\r\n            return stateCopy;\r\n           }\r\n\r\n        case 'UPDATE_POST':{\r\n            return {...state,newPostText : action.newText};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n    /*if(action.type==='ADD_POST'){\r\n        let postMessage={\r\n            id: 5,\r\n            post:state.newPostText,\r\n            like: 3\r\n        }\r\n        state.posts.push(postMessage);\r\n        state.newPostText='';\r\n    }else if(action.type==='UPDATE_POST'){\r\n       state.newPostText=action.newText;}\r\n    return state;*/\r\n}\r\nexport const updatePostAC = (newText: string) => {\r\n\r\n    return {type: 'UPDATE_POST', newText: newText} as const\r\n}\r\nexport const addPostAC = () => {\r\n    return {type: 'ADD_POST'} as const\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {addPostAC, updatePostAC} from '../../../redux/profileReduser';\r\nimport {NewPost} from './NewPost';\r\nimport {AppStateType} from '../../../redux/StoreRedux';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStateToPropsType={\r\n    newPostText:string\r\n}\r\ntype MapDispatchToPropsType={\r\n    addPost: () => void\r\n    ubdatePost: (newText: string) => void\r\n}\r\n\r\nlet mapStateToProps=(state:AppStateType):MapStateToPropsType=>{\r\n    return{\r\n        newPostText:state.postData.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch:Dispatch):MapDispatchToPropsType=>{\r\n    return {\r\n        addPost :() => {\r\n           dispatch(addPostAC());\r\n        },\r\n        ubdatePost:(newText:string) => {\r\n           dispatch(updatePostAC(newText));\r\n        }\r\n}}\r\n\r\nexport const NewPostContainer=connect(mapStateToProps,mapDispatchToProps)(NewPost);","import React, {ChangeEvent} from 'react';\r\nimport s from './NewPost.module.css'\r\n\r\n\r\ntype NewPostPropsType = {\r\n    addPost: () => void\r\n    ubdatePost: (newText: string) => void\r\n    newPostText:string\r\n}\r\n\r\n\r\nexport const NewPost = (props: NewPostPropsType) => {\r\n\r\n    let addPost = () => {\r\n        props.addPost();\r\n    }\r\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let newText = e.currentTarget.value;\r\n        props.ubdatePost(newText);\r\n    }\r\n\r\n    return (<div>\r\n            <textarea onChange={onPostChange} value={props.newPostText}></textarea>\r\n            <span><button onClick={addPost}>Send</button></span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {StoreType} from './redux/StoreRedux';\r\nconst StoreContext=React.createContext({}as StoreType);\r\nexport default StoreContext;","import React from 'react';\r\nimport {Posts} from './Posts';\r\nimport {NewPostContainer} from './NewPostContainer';\r\nimport StoreContext from '../../../StoreContext';\r\n\r\nexport const MyPost = () => {\r\n   return(<StoreContext.Consumer>\r\n      {\r\n       (store)=>{\r\n           let state=store.getState();\r\n           let postElements = state.postData.posts.map(p => <Posts post={p.post} like={p.like}/>)\r\n           return (<div>\r\n                   <h2>My posts</h2>\r\n                   <NewPostContainer/>\r\n                   {postElements}\r\n               </div>\r\n           )  }}\r\n   </StoreContext.Consumer>)\r\n}","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport {MyPost} from './MyPost';\r\n\r\n\r\n\r\nexport const Profile=()=>{\r\n\r\n    return(<div className={s.mainProfile}>\r\n        <div className={s.mainImg} >\r\n            <img src={'https://images.pexels.com/photos/756861/pexels-photo-756861.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'} alt='Main Picture' />\r\n        </div>\r\n        <div>\r\n            Ava+Discription\r\n        </div>\r\n            <MyPost />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\n\r\nexport const News = () => {\r\n    return (<div>\r\n            News\r\n        </div>\r\n    )}","import React from 'react';\r\n\r\n\r\n\r\nexport const Music = () => {\r\n    return (<div>\r\n            Music\r\n        </div>\r\n    )}","import React from 'react';\r\n\r\n\r\n\r\nexport const Settings = () => {\r\n    return (<div>\r\n           Settings\r\n        </div>\r\n    )}","import {MessagesType} from '../App';\r\n\r\ntype ActionType=ReturnType<typeof addMessageAC >|ReturnType<typeof sendMessageAC >\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Anna'},\r\n        {id: 2, name: 'Nik'},\r\n        {id: 3, name: 'Mike'},\r\n        {id: 4, name: 'Dima'},\r\n        {id: 6, name: 'Nino'},\r\n\r\n    ],\r\n    messageData: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'Yes'},\r\n        {id: 3, message: 'No'},\r\n        {id: 4, message: 'Love'},\r\n        {id: 5, message: 'Look'},\r\n    ],\r\n    newMessage: ''\r\n\r\n}\r\n\r\nexport const messageReduser = (state: MessagesType = initialState, action: ActionType): MessagesType => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_MESSAGE' :\r\n           return {\r\n                ...state,\r\n                newMessage: action.newText\r\n            };\r\n\r\n        case'SEND_MESSAGE' :\r\n            let newMessageText = state.newMessage;\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, {id: 6, message: newMessageText}],\r\n                newMessage: ''\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    /* if(action.type==='ADD_MESSAGE'){\r\n         state.newMessage=action.newText;\r\n     }else if(action.type==='SEND_MESSAGE'){\r\n         let newMessageText=state.newMessage;\r\n         state.newMessage=''\r\n        state.messageData.push({id: 1, message: newMessageText});\r\n     }\r\n     return state;*/\r\n}\r\nexport const addMessageAC = (newText: string) => {\r\n    return {type: 'ADD_MESSAGE', newText: newText} as const\r\n}\r\nexport const sendMessageAC = () => {\r\n    return {type: 'SEND_MESSAGE'} as const\r\n}","import s from './Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\ntype PropsType={\r\n    id:number\r\n    name:string\r\n}\r\n\r\nexport const DialogsItems = (props:PropsType) => {\r\n    return (<div className={s.dialog}>\r\n        <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\n\r\ntype PropsType={\r\n    message:string\r\n}\r\nexport const Messages = (props:PropsType) => {\r\n    return (<div className={s.messages}>{props.message}</div>)\r\n}\r\n","import React, {ChangeEvent, ChangeEventHandler} from 'react';\r\nimport {addMessageAC, sendMessageAC} from '../../../redux/messageReduser';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {MessagesType, StateType} from '../../../App';\r\nimport {Dispatch} from 'redux';\r\nimport {AppStateType} from '../../../redux/StoreRedux';\r\n\r\n\r\n type MapStateToPropsType={\r\n     messageData:MessagesType\r\n }\r\ntype MapDispatchToPropsType={\r\n    addMessage:()=>void\r\n    messageChange:(newText:string)=>void\r\n}\r\n\r\n let  mapStateToProps=(state:AppStateType):MapStateToPropsType=>{\r\nreturn{\r\n    messageData:state.messageData\r\n}\r\n }\r\n let mapDispatchToProps=(dispatch:Dispatch,):MapDispatchToPropsType=>{\r\n\r\n        return{\r\n            addMessage  :()=>{dispatch(sendMessageAC())},\r\n            messageChange :(newText:string)=>{dispatch(addMessageAC(newText))}\r\n        }\r\n }\r\n\r\nexport const DialogContainer=connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\n","import React, {ChangeEvent, ChangeEventHandler} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {DialogsItems} from './DialogsItems';\r\nimport {Messages} from './Messages';\r\nimport {MessagesType} from '../../../App';\r\n\r\ntype PropsType = {\r\n    addMessage:()=>void\r\n    messageChange:(newText:string)=>void\r\n    messageData: MessagesType\r\n}\r\n\r\nexport const Dialogs = (props: PropsType) => {\r\n\r\n    let dialogElements = props.messageData.dialogsData.map(d => <DialogsItems key={d.id} id={d.id} name={d.name}/>)\r\n    let messageElement = props.messageData.messageData.map(m => <Messages key={m.id} message={m.message}/>)\r\n    let newText=props.messageData.newMessage;\r\n\r\n    let addMessage = () => {\r\n        props.addMessage();\r\n    }\r\n   let messageChange=(e:ChangeEvent<HTMLTextAreaElement>)=>{\r\n       let newText=e.currentTarget.value;\r\n       props.messageChange(newText);\r\n   }\r\n\r\n    return (<div className={s.containerDialogs}>\r\n            <div>\r\n                {dialogElements}\r\n\r\n            </div>\r\n            <div>\r\n                {messageElement}\r\n                <textarea value={newText} onChange={messageChange} placeholder={'Enter yout message...'}></textarea>\r\n                <button onClick={addMessage}>Send</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport {addPostAC, updatePostAC} from './profileReduser';\r\ntype  ActionType=FollowACActionType|UnFollowACActionType|SetUsersACActionType\r\n\r\ntype FollowACActionType={\r\n    type:'FOLLOW'\r\n    userID:number\r\n}\r\ntype UnFollowACActionType={\r\n    type:'UNFOLLOW'\r\n    userID:number\r\n}\r\ntype SetUsersACActionType={\r\n    type:'SET_USERS'\r\n    users:Array<UserType>\r\n}\r\nexport  type InitialStateType={\r\n    users:Array<UserType>}\r\n\r\nexport type UserType={\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null|string\r\n    photos: PhotoType\r\n    status: null|string\r\n    followed: boolean\r\n}\r\ntype PhotoType={\r\n    small: null|string\r\n    large: null|string\r\n}\r\n\r\nlet initialState={\r\n    users:[]\r\n}\r\n\r\nexport const usersReducer=(state: InitialStateType=initialState,action:ActionType): InitialStateType=>{\r\n    switch (action.type){\r\n        case'FOLLOW':\r\n        return {\r\n            ...state,\r\n            users: state.users.map(u=>{\r\n                if (u.id===action.userID){\r\n                    return{...u,followed:true}\r\n                }return u;\r\n            })\r\n        }\r\n        case 'UNFOLLOW':\r\n        return {\r\n            ...state,\r\n            users: state.users.map(u=>{\r\n                if (u.id===action.userID){\r\n                    return{...u,followed:false}\r\n                }return u;\r\n            })\r\n        }\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,users:[...state.users,...action.users]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC=(userID:number)=>( {type:'FOLLOW',userID:userID});\r\nexport const unfollowAC=(userID:number)=>( {type:'UNFOLLOW',userID:userID});\r\nexport const setUsersAC=(users:Array<UserType> )=>( {type:'SET_USERS',users});\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/blank-profile-picture-973460_960_720.efadb13d.webp\";","import React from 'react';\r\nimport userPhoto from '../../../assets/images/blank-profile-picture-973460_960_720.webp';\r\nimport s from './User.module.css';\r\nimport {AppStateType} from '../../../redux/StoreRedux';\r\nimport {MapDispatchToPropsType, MapStateToPropsType} from './UserContainer';\r\nimport {UserType} from '../../../redux/usersReduser';\r\nimport axios from 'axios';\r\ntype APIType={\r\n    items:Array<UserType>\r\n    totalCount:number\r\n    error:string\r\n}\r\n\r\nclass Users extends React.Component< MapStateToPropsType&MapDispatchToPropsType , AppStateType> {\r\n\r\n        componentDidMount() {\r\n            axios.get<APIType>('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n            this.props.setUsers(response.data.items)\r\n        });\r\n        }\r\n\r\n\r\n    render() {\r\n        return<div>\r\n            {\r\n                this.props.usersPage.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div><img src={u.photos.small != null ? u.photos.small : userPhoto} alt='UserPhoto' className={s.userImg}/></div>\r\n                    <div>{u.followed ? <button onClick={() => {\r\n                        this.props.unfollow(u.id)\r\n                    }}>UnFollow</button> : <button onClick={() => {\r\n                        this.props.follow(u.id)\r\n                    }}>Follow</button>}</div>\r\n                </span>\r\n                        <span>\r\n                    <span>\r\n                        <div>{u.name}</div><div>{u.status}</div>\r\n                    </span>\r\n                </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {AppStateType} from '../../../redux/StoreRedux';\r\nimport {Dispatch} from 'redux';\r\nimport {followAC, setUsersAC, unfollowAC, UserType} from '../../../redux/usersReduser';\r\nimport Users from './Users';\r\n\r\nexport type MapStateToPropsType={\r\n    usersPage:Array<UserType>\r\n}\r\nexport type MapDispatchToPropsType={\r\n    follow:(userID:number)=>void\r\n    unfollow:(userID:number)=>void\r\n    setUsers:(users:Array<UserType>)=>void\r\n}\r\nlet mapStateToProps=(state:AppStateType):MapStateToPropsType=>{\r\n    return{\r\n        usersPage:state.UsersPage.users\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch:Dispatch):MapDispatchToPropsType=>{\r\nreturn{\r\n    follow:(userID:number)=>{\r\n        dispatch(followAC(userID))\r\n    },\r\n    unfollow:(userID:number)=>{\r\n        dispatch(unfollowAC(userID))\r\n    },\r\n    setUsers:(users:Array<UserType>)=>{\r\n        dispatch(setUsersAC(users))\r\n    }\r\n}}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Users);","import React from 'react';\nimport './App.css';\nimport {Header} from './Components/Header/Header';\nimport {Nav} from './Components/Nav/Nav';\nimport {Profile} from './Components/MainContent/Profile/Profile';\nimport {Route} from 'react-router';\nimport {BrowserRouter} from 'react-router-dom';\nimport {News} from './Components/MainContent/News/News';\nimport {Music} from './Components/MainContent/Music/Music';\nimport {Settings} from './Components/MainContent/Settings/Settings';\nimport {ActionType, AppStateType, StoreType} from './redux/StoreRedux';\nimport {DialogContainer} from './Components/MainContent/Dialogs/DialogContainer';\nimport UserContainer from './Components/MainContent/Users/UserContainer';\n\n\n\ntype AppPropsType={\n    store:StoreType\n    state:AppStateType\n    dispatch:(action:ActionType)=>void\n}\n export type StateType ={\n    postData:PostDataType\n    messages: MessagesType\n}\nexport type PostDataType={\n    posts:Array<PostType>\n    newPostText:string\n}\ntype PostType={\n    id:number,\n    post:string,\n    like:number\n}\nexport type MessagesType = {\n    dialogsData: Array<DialogsType>,\n    messageData: Array<MessageType>\n    newMessage:string\n}\ntype DialogsType = {\n    id: number,\n    name: string\n}\ntype MessageType = {\n    id: number,\n    message: string\n}\n\n\nfunction UsersContainer() {\n    return null;\n}\n\nfunction App() {\n\n    return (<BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                <div className=\"InfContainer\">\n                    <Nav/>\n                    <div className=\"appMainContent\">\n                        <Route path=\"/profile\" render={()=><Profile  />}/>\n                        <Route path=\"/dialogs\" render={()=><DialogContainer />}/>\n                        <Route path=\"/users\" render={()=><UserContainer />}/>\n\n                        <Route path=\"/news\" render={()=><News/>}/>\n                        <Route path=\"/music\" render={()=><Music/>}/>\n                        <Route path=\"/settings\" render={()=><Settings/>}/>\n                    </div>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {combineReducers, createStore} from 'redux';\r\nimport {addPostAC, profileReduser, updatePostAC} from './profileReduser';\r\nimport {addMessageAC, messageReduser, sendMessageAC} from './messageReduser';\r\nimport {followAC, setUsersAC, unfollowAC, usersReducer} from './usersReduser';\r\n\r\nexport type RootReducerType = typeof rootRedusers;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nexport type StoreType = typeof store;\r\nlet rootRedusers=combineReducers({\r\n    postData :profileReduser,\r\n    messageData :messageReduser,\r\n    UsersPage: usersReducer\r\n})\r\nexport type ActionType=ReturnType<typeof addMessageAC >|ReturnType<typeof sendMessageAC >|ReturnType<typeof updatePostAC >|\r\n    ReturnType<typeof addPostAC >| ReturnType<typeof followAC >|ReturnType<typeof unfollowAC >|ReturnType<typeof setUsersAC>\r\n\r\nexport let store=createStore(rootRedusers);\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport {store} from './redux/StoreRedux'\nimport StoreContext from './StoreContext';\nimport { Provider } from 'react-redux';\n\n\nlet renderTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <StoreContext.Provider value={store}>\n                    < App/>\n                </StoreContext.Provider>\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root'));}\n    renderTree();\n\n    store.subscribe(()=>{renderTree()});\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__3AhGP\",\"activeLink\":\"Nav_activeLink__NMa5k\"};"],"sourceRoot":""}