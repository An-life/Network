{"version":3,"sources":["Components/MainContent/Profile/Profile.module.css","Components/Header/Header.module.css","Components/MainContent/Profile/Posts.module.css","reportWebVitals.ts","Components/Header/Header.tsx","Components/Nav/Nav.tsx","Components/MainContent/Profile/NewPost.tsx","Components/MainContent/Profile/Posts.tsx","Components/MainContent/Profile/MyPost.tsx","Components/MainContent/Profile/Profile.tsx","Components/MainContent/Dialogs/DialogsItems.tsx","Components/MainContent/Dialogs/Messages.tsx","Components/MainContent/Dialogs/Dialogs.tsx","Components/MainContent/News/News.tsx","Components/MainContent/Music/Music.tsx","Components/MainContent/Settings/Settings.tsx","App.tsx","redux/state.ts","index.tsx","Components/Nav/Nav.module.css","Components/MainContent/Dialogs/Dialogs.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","src","alt","Nav","to","activeClassName","activeLink","NewPost","props","onChange","e","updatePost","currentTarget","value","newPostText","onClick","addPost","Posts","avaImg","post","like","MyPost","postElements","postData","posts","map","p","Profile","mainProfile","mainImg","DialogsItems","dialog","id","name","Messages","messages","message","Dialogs","dialogElements","dialogsData","d","messageElement","messageData","m","newMessage","React","createRef","containerDialogs","ref","textMessage","current","alert","News","Music","Settings","App","path","render","state","renderTree","postMessage","push","newText","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39c93c56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainImg\":\"Profile_mainImg__2CZT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1s8MH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaImg\":\"Posts_avaImg__19nYX\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\n\r\nexport const Header=()=>{\r\n    return(\r\n        <div className={s.header}>\r\n            <img src={'https://images.pexels.com/photos/1162361/pexels-photo-1162361.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'} alt='logo'/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Nav.module.css'\r\n\r\n\r\nexport const Nav=()=>{\r\n    return(\r\n        <div className={s.Nav}>\r\n            <div><NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink></div>\r\n            <div><NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink></div>\r\n            <div><NavLink to='/news' activeClassName={s.activeLink}>News</NavLink></div>\r\n            <div><NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink></div>\r\n            <div><NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink></div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './NewPost.module.css'\r\n\r\ntype NewPostPropsType = {\r\n    newPostText: string\r\n    addPost: (post:string) => void\r\n    updatePost: (newText: string) => void\r\n}\r\nexport const NewPost = (props: NewPostPropsType) => {\r\n\r\n    let addPost = () => {\r\n        props.addPost(props.newPostText);\r\n    }\r\n    let onPostChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updatePost(e.currentTarget.value);\r\n    }\r\n\r\n    return (<div>\r\n            <textarea  onChange={onPostChange} value={props.newPostText}></textarea>\r\n            <span><button onClick={addPost}>Send</button></span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Posts.module.css'\r\ntype PropsType={\r\n    post:string\r\n    like:number\r\n}\r\n\r\nexport const Posts = (props:PropsType) => {\r\n    return (<div>\r\n            <div className={s.avaImg}>\r\n            <img src={'https://images.pexels.com/photos/33537/cat-animal-cat-portrait-mackerel.jpg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'} alt='Ava'/>\r\n            </div>\r\n            <div>{props.post} like {props.like}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './MyPost.module.css'\r\nimport {NewPost} from './NewPost';\r\nimport {Posts} from './Posts';\r\nimport {PostDataType} from '../../../App';\r\ntype PropsType={\r\n    postData:PostDataType\r\n    addPost:()=>void\r\n    updatePost:(newText:string)=>void\r\n}\r\ntype PostType={\r\n    id:number,\r\n    post:string,\r\n    like:number\r\n}\r\nexport const MyPost = (props:PropsType) => {\r\n\r\n    let postElements = props.postData.posts.map(p => <Posts post={p.post} like={p.like}/>)\r\n    return (<div>\r\n            <h2>My posts</h2>\r\n            <NewPost  newPostText={props.postData.newPostText} addPost={props.addPost} updatePost={props.updatePost}/>\r\n            {postElements}\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport {MyPost} from './MyPost';\r\nimport {PostDataType} from '../../../App';\r\nimport {updatePost} from '../../../redux/state';\r\n\r\ntype PropsType={\r\n    postData:PostDataType\r\n    addPost:()=>void\r\n    updatePost:(newText:string)=>void\r\n}\r\ntype PostType={\r\n    id:number,\r\n    post:string,\r\n    like:number\r\n}\r\n\r\nexport const Profile=(props:PropsType)=>{\r\n    let postData = [\r\n        {id: 1, post: 'Hi!', like: 3},\r\n        {id: 2, post: 'Yo!', like: 4},\r\n        {id: 3, post: 'Like!', like: 1}\r\n    ]\r\n    return(<div className={s.mainProfile}>\r\n        <div className={s.mainImg} >\r\n            <img src={'https://images.pexels.com/photos/756861/pexels-photo-756861.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'} alt='Main Picture' />\r\n        </div>\r\n        <div>\r\n            Ava+Discription\r\n        </div>\r\n            <MyPost postData={props.postData} addPost={props.addPost} updatePost={props.updatePost}/>\r\n        </div>\r\n    )\r\n}","import s from './Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\ntype PropsType={\r\n    id:number\r\n    name:string\r\n}\r\n\r\nexport const DialogsItems = (props:PropsType) => {\r\n    return (<div className={s.dialog}>\r\n        <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\n\r\ntype PropsType={\r\n    message:string\r\n}\r\nexport const Messages = (props:PropsType) => {\r\n    return (<div className={s.messages}>{props.message}</div>)\r\n}\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {DialogsItems} from './DialogsItems';\r\nimport {Messages} from './Messages';\r\n\r\ntype PropsType = {\r\n    dialogsData: Array<DialogsType>,\r\n    messageData: Array<MessageType>\r\n}\r\ntype DialogsType = {\r\n    id: number,\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number,\r\n    message: string\r\n}\r\n\r\nexport const Dialogs = (props: PropsType) => {\r\n\r\n    let dialogElements = props.dialogsData.map(d => <DialogsItems id={d.id} name={d.name}/>)\r\n    let messageElement = props.messageData.map(m => <Messages message={m.message}/>)\r\n    let newMessage = React.createRef<HTMLTextAreaElement>();\r\n    let addMessage = () => {\r\n        let textMessage = newMessage.current?.value;\r\n        alert(textMessage)\r\n    }\r\n\r\n\r\n    return (<div className={s.containerDialogs}>\r\n            <div>\r\n                {dialogElements}\r\n\r\n            </div>\r\n            <div>\r\n                {messageElement}\r\n                <textarea ref={newMessage}></textarea>\r\n                <button onClick={addMessage}>Send</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\n\r\nexport const News = () => {\r\n    return (<div>\r\n            News\r\n        </div>\r\n    )}","import React from 'react';\r\n\r\n\r\n\r\nexport const Music = () => {\r\n    return (<div>\r\n            Music\r\n        </div>\r\n    )}","import React from 'react';\r\n\r\n\r\n\r\nexport const Settings = () => {\r\n    return (<div>\r\n           Settings\r\n        </div>\r\n    )}","import React from 'react';\nimport './App.css';\nimport {Header} from './Components/Header/Header';\nimport {Nav} from './Components/Nav/Nav';\nimport {Profile} from './Components/MainContent/Profile/Profile';\nimport {Dialogs} from './Components/MainContent/Dialogs/Dialogs';\nimport {Route} from 'react-router';\nimport {BrowserRouter} from 'react-router-dom';\nimport {News} from './Components/MainContent/News/News';\nimport {Music} from './Components/MainContent/Music/Music';\nimport {Settings} from './Components/MainContent/Settings/Settings';\n\n\ntype AppPropsType={\n    state:StateType\n    addPost:()=>void\n    updatePost:(newText:string)=>void\n}\n export type StateType ={\n    postData:PostDataType\n    messages: MessagesType\n}\nexport type PostDataType={\n    posts:Array<PostType>\n    newPostText:string\n}\ntype PostType={\n    id:number,\n    post:string,\n    like:number\n}\ntype MessagesType = {\n    dialogsData: Array<DialogsType>,\n    messageData: Array<MessageType>\n}\ntype DialogsType = {\n    id: number,\n    name: string\n}\ntype MessageType = {\n    id: number,\n    message: string\n}\n\nfunction App(props:AppPropsType) {\n\n    return (<BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                <div className=\"InfContainer\">\n                    <Nav/>\n                    <div className=\"appMainContent\">\n                        <Route path=\"/profile\" render={()=><Profile postData={props.state.postData} addPost={props.addPost} updatePost={props.updatePost} />}/>\n                        <Route path=\"/dialogs\" render={()=><Dialogs dialogsData={props.state.messages.dialogsData}\n                                                                    messageData={props.state.messages.messageData}/>}/>\n                        <Route path=\"/news\" render={()=><News/>}/>\n                        <Route path=\"/music\" render={()=><Music/>}/>\n                        <Route path=\"/settings\" render={()=><Settings/>}/>\n\n\n\n\n                    </div>\n                </div>\n            </div>\n        </BrowserRouter>\n\n    );\n}\n\nexport default App;\n","let renderTree=()=>{\r\n}\r\n\r\nexport let state = {\r\n    postData:{ posts:[\r\n            {id: 1, post: 'Hi!', like: 3},\r\n            {id: 2, post: 'Yo!', like: 4},\r\n            {id: 3, post: 'Like!', like: 1}\r\n        ],\r\n    newPostText:''}\r\n   ,\r\n    messages: {\r\n        dialogsData: [\r\n            {id: 1, name: 'Anna'},\r\n            {id: 2, name: 'Nik'},\r\n            {id: 3, name: 'Mike'},\r\n            {id: 4, name: 'Dima'},\r\n            {id: 6, name: 'Nino'},\r\n\r\n        ],\r\n        messageData: [\r\n            {id: 1, message: 'Hi!'},\r\n            {id: 2, message: 'Yes'},\r\n            {id: 3, message: 'No'},\r\n            {id: 4, message: 'Love'},\r\n            {id: 5, message: 'Look'},\r\n        ]\r\n    }\r\n}\r\n\r\nexport  let addPost=()=>{\r\n    let postMessage={\r\n        id: 5,\r\n        post:state.postData.newPostText,\r\n        like: 3\r\n    }\r\n    state.postData.posts.push(postMessage);\r\n    state.postData.newPostText='';\r\n    renderTree();\r\n}\r\n\r\nexport let updatePost=(newText:string)=>{\r\n    state.postData.newPostText=newText;\r\n    renderTree();\r\n}\r\nexport const subsriber=(observer:()=>void)=>{\r\n    renderTree=observer;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App, {StateType} from './App';\nimport {addPost, state, subsriber, updatePost} from './redux/state';\ntype AppPropsType={\n    state:StateType\n    addPost:()=>void\n    updatePost:(newText:string)=>void\n}\nexport let renderTree=()=>{ReactDOM.render(\n    <React.StrictMode>\n        < App state={state} addPost={addPost}  updatePost={updatePost}/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n;}\n\nrenderTree();\nsubsriber(renderTree);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__3AhGP\",\"activeLink\":\"Nav_activeLink__NMa5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerDialogs\":\"Dialogs_containerDialogs__29Xah\",\"dialog\":\"Dialogs_dialog__3pvjr\",\"messages\":\"Dialogs_messages__1um_Y\"};"],"sourceRoot":""}